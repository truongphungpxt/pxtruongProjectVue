{"ast":null,"code":"export default {\n  props: {\n    inputContent: null,\n    isNotAllowNull: Boolean,\n    modelValue: null,\n    isCheckValidate: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data() {\n    return {\n      value: Date,\n      format: \"dd/MM/yyyy\",\n      isNull: Boolean,\n      alertMsg: null\n    };\n  },\n  watch: {\n    value: function (newValue) {\n      if (!this.checkNull(newValue)) {\n        this.validate(newValue);\n      }\n      this.$emit(\"update:modelValue\", newValue);\n    },\n    isCheckValidate: function (newValue) {\n      if (newValue && this.isNotAllowNull) {\n        this.validate(this.value);\n      }\n    }\n  },\n  created() {\n    console.log(this.modelValue);\n    this.value = this.modelValue;\n  },\n  methods: {\n    /**\r\n    * AuthorPXTRUONG(15/6/2023)\r\n    * Check null\r\n    */\n    checkNull(data) {\n      data = new Date(data);\n      if (data == \"Invalid Date\") {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    /**\r\n     * Author:PXTRUONG(6/5/2023)\r\n     * kiểm tra dữ liệu \r\n     */\n    validate(data) {\n      try {\n        data = new Date(data);\n        if (this.isNotAllowNull) {\n          if (data == \"Invalid Date\") {\n            this.isNull = false;\n            this.alertMsg = this.inputContent + \" không được bỏ trống\";\n            // console.log( this.$refs.Minput);\n            return true;\n          } else {\n            this.isNull = true;\n            return false;\n          }\n        }\n      } catch (error) {}\n    }\n  }\n};","map":{"version":3,"names":["props","inputContent","isNotAllowNull","Boolean","modelValue","isCheckValidate","type","default","data","value","Date","format","isNull","alertMsg","watch","newValue","checkNull","validate","$emit","created","console","log","methods","error"],"sources":["C:\\Users\\Admin\\Desktop\\Web-04-PXTRUONG\\web-04-vue\\web202304\\pxtruong\\vue\\src\\components\\base\\MDatapicker.vue"],"sourcesContent":["<template>\r\n    <div class=\"input__container\">\r\n        <p class=\"popup__font__label--name\">\r\n            {{ inputContent }} <span v-if=\"isNotAllowNull\" class=\"popup__color--red\">*</span>\r\n        </p>\r\n        <div>\r\n            <VueDatePicker v-model=\"value\" auto-apply :format=\"format\" text-input :state=\"isNull\" @blur=\"validate(date)\" ref=\"Minput\">\r\n                <template #input-icon>\r\n               \r\n                    <div class=\"icon dp__input--icon\"></div>\r\n                </template>\r\n                <template>\r\n                    <input maxlength=\"5\"/>\r\n                </template>\r\n                <template #clear-icon>\r\n                    <img style=\"display: none;\" />\r\n                </template>\r\n                <template #action-extra=\"{ selectCurrentDate }\">\r\n                    <span @click=\"selectCurrentDate()\" title=\"Select current date\">\r\n                        Hôm nay\r\n                    </span>\r\n                </template>\r\n            </VueDatePicker>\r\n            <div class=\"popup__error\">\r\n                <div class=\"popup__color--red\" v-if=\"!isNull\">\r\n                    {{ alertMsg }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nexport default {\r\n    props: {\r\n        inputContent: null,\r\n        isNotAllowNull: Boolean,\r\n        modelValue:null,\r\n        isCheckValidate:{\r\n            type:Boolean,\r\n            default:false\r\n        }\r\n    },\r\n    data() {\r\n        return {\r\n            value: Date,\r\n            format: \"dd/MM/yyyy\",\r\n            isNull: Boolean,\r\n            alertMsg: null,\r\n        }\r\n    },\r\n    watch:{\r\n        value: function (newValue) {\r\n            if(!this.checkNull(newValue)){\r\n                    this.validate(newValue);\r\n                    \r\n            }\r\n            this.$emit(\"update:modelValue\", newValue);\r\n            \r\n        },\r\n        isCheckValidate:function(newValue){\r\n            if(newValue && this.isNotAllowNull ){\r\n                this.validate(this.value)\r\n                   \r\n            }\r\n        }\r\n    },\r\n    created() {\r\n        console.log(this.modelValue);\r\n        this.value=this.modelValue;\r\n    },\r\n    methods: {\r\n         /**\r\n         * AuthorPXTRUONG(15/6/2023)\r\n         * Check null\r\n         */\r\n         checkNull(data){\r\n            data = new Date(data)\r\n            if (data == \"Invalid Date\") {\r\n                    return true;\r\n                }\r\n                else {\r\n                    return false;\r\n                }\r\n        },\r\n        /**\r\n         * Author:PXTRUONG(6/5/2023)\r\n         * kiểm tra dữ liệu \r\n         */\r\n        validate(data) {\r\n            try {\r\n                data = new Date(data)\r\n          \r\n            if (this.isNotAllowNull) {\r\n                if (data == \"Invalid Date\") {\r\n                    this.isNull = false;\r\n                    this.alertMsg = this.inputContent + \" không được bỏ trống\";\r\n                    // console.log( this.$refs.Minput);\r\n                    return true;\r\n                }\r\n                else {\r\n                    this.isNull = true;\r\n                  \r\n                    return false;\r\n                }\r\n            }\r\n                \r\n            } catch (error) {\r\n                \r\n            }\r\n            \r\n        }\r\n    }\r\n}\r\n</script>\r\n<style >\r\n@import url('../../style/base/textfield.css');\r\n\r\n.dp__input_icon {\r\n    left: unset !important;\r\n    right: 0;\r\n    border: unset !important;\r\n\r\n}\r\n\r\nimg {\r\n    border: unset;\r\n}\r\n\r\n/* .dp__icon path{\r\n   display: none !important;\r\n} */\r\n.dp__input_icon_pad {\r\n    padding-left: 12px !important;\r\n}\r\n\r\n.dp__button_bottom {\r\n    display: none !important;\r\n}\r\n\r\n.dp__action_extra {\r\n    border-top: 1px solid #afafaf;\r\n    height: 45px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    color: #50B83C;\r\n\r\n}\r\n</style>"],"mappings":"AAkCA,eAAe;EACXA,KAAK,EAAE;IACHC,YAAY,EAAE,IAAI;IAClBC,cAAc,EAAEC,OAAO;IACvBC,UAAU,EAAC,IAAI;IACfC,eAAe,EAAC;MACZC,IAAI,EAACH,OAAO;MACZI,OAAO,EAAC;IACZ;EACJ,CAAC;EACDC,IAAIA,CAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAEC,IAAI;MACXC,MAAM,EAAE,YAAY;MACpBC,MAAM,EAAET,OAAO;MACfU,QAAQ,EAAE;IACd;EACJ,CAAC;EACDC,KAAK,EAAC;IACFL,KAAK,EAAE,SAAAA,CAAUM,QAAQ,EAAE;MACvB,IAAG,CAAC,IAAI,CAACC,SAAS,CAACD,QAAQ,CAAC,EAAC;QACrB,IAAI,CAACE,QAAQ,CAACF,QAAQ,CAAC;MAE/B;MACA,IAAI,CAACG,KAAK,CAAC,mBAAmB,EAAEH,QAAQ,CAAC;IAE7C,CAAC;IACDV,eAAe,EAAC,SAAAA,CAASU,QAAQ,EAAC;MAC9B,IAAGA,QAAO,IAAK,IAAI,CAACb,cAAa,EAAG;QAChC,IAAI,CAACe,QAAQ,CAAC,IAAI,CAACR,KAAK;MAE5B;IACJ;EACJ,CAAC;EACDU,OAAOA,CAAA,EAAG;IACNC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACjB,UAAU,CAAC;IAC5B,IAAI,CAACK,KAAK,GAAC,IAAI,CAACL,UAAU;EAC9B,CAAC;EACDkB,OAAO,EAAE;IACJ;;;;IAIAN,SAASA,CAACR,IAAI,EAAC;MACZA,IAAG,GAAI,IAAIE,IAAI,CAACF,IAAI;MACpB,IAAIA,IAAG,IAAK,cAAc,EAAE;QACpB,OAAO,IAAI;MACf,OACK;QACD,OAAO,KAAK;MAChB;IACR,CAAC;IACD;;;;IAIAS,QAAQA,CAACT,IAAI,EAAE;MACX,IAAI;QACAA,IAAG,GAAI,IAAIE,IAAI,CAACF,IAAI;QAExB,IAAI,IAAI,CAACN,cAAc,EAAE;UACrB,IAAIM,IAAG,IAAK,cAAc,EAAE;YACxB,IAAI,CAACI,MAAK,GAAI,KAAK;YACnB,IAAI,CAACC,QAAO,GAAI,IAAI,CAACZ,YAAW,GAAI,sBAAsB;YAC1D;YACA,OAAO,IAAI;UACf,OACK;YACD,IAAI,CAACW,MAAK,GAAI,IAAI;YAElB,OAAO,KAAK;UAChB;QACJ;MAEA,EAAE,OAAOW,KAAK,EAAE,CAEhB;IAEJ;EACJ;AACJ"},"metadata":{},"sourceType":"module","externalDependencies":[]}