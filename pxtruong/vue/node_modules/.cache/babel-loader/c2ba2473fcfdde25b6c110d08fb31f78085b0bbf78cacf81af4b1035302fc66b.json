{"ast":null,"code":"const format = {\n  /**\r\n  * Format lại về dạng tiền\r\n  * Author:PXTRUONG(24/05/2023)\r\n  */\n  fomatmoney(money, isPercent) {\n    try {\n      if (money) {\n        if (isPercent) {\n          if (money == Infinity) {\n            return \"\";\n          } else {\n            money = parseFloat(money).toFixed(2);\n            money = money.toString();\n            return money.replaceAll(\".\", \",\");\n          }\n        } else {\n          money = parseFloat(money).toFixed(0);\n          money = money.toString();\n          return money.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\");\n        }\n      } else {\n        return \"\";\n      }\n    } catch (error) {\n      return error;\n    }\n  },\n  /**\r\n  * unformat lại từ dạng tiền về số \r\n  * Author:PXTRUONG(8/6/2023)\r\n  */\n  unformat(money, isPercent) {\n    try {\n      if (money) {\n        if (isPercent) {\n          var value = parseFloat(money.replaceAll(\",\", \".\"));\n          return value;\n        } else {\n          var value = parseInt(money.replaceAll(\".\", \"\"));\n          return value;\n        }\n      } else {\n        return \"\";\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  },\n  /**\r\n   * Author:PXTRUONG(20/6/2023)\r\n   * Xóa khoảng trắng \r\n   */\n  whiteSpace(data) {\n    if (data) {\n      data = data.toString();\n      var value = data.replace(/\\s/g, \"\");\n      return value;\n    }\n  }\n};\nexport default format;","map":{"version":3,"names":["format","fomatmoney","money","isPercent","Infinity","parseFloat","toFixed","toString","replaceAll","replace","error","unformat","value","parseInt","console","log","whiteSpace","data"],"sources":["C:/Users/Admin/Desktop/Web-04-PXTRUONG/web-04-vue/web202304/pxtruong/vue/src/js/format/format.js"],"sourcesContent":["const format={\r\n         /**\r\n      * Format lại về dạng tiền\r\n      * Author:PXTRUONG(24/05/2023)\r\n      */\r\n         fomatmoney(money,isPercent){\r\n            try { \r\n                if(money){\r\n                    if(isPercent){\r\n                       if(money==Infinity){\r\n                        return \"\";\r\n                       }\r\n                       else{\r\n                        money = parseFloat(money).toFixed(2);\r\n                      \r\n                        money = money.toString();\r\n                        \r\n                        return money.replaceAll(\".\",\",\"); \r\n                       }\r\n                     \r\n                    }\r\n                    else{\r\n                        money = parseFloat(money).toFixed(0);\r\n                        money = money.toString();\r\n                        return money.replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1.\"); \r\n                    }\r\n                \r\n                }\r\n                else{\r\n                    return \"\";\r\n                }\r\n                     \r\n            } catch (error) {\r\n                return error\r\n            }\r\n        },\r\n         /**\r\n      * unformat lại từ dạng tiền về số \r\n      * Author:PXTRUONG(8/6/2023)\r\n      */\r\n        unformat(money,isPercent){\r\n            try {\r\n                if(money){\r\n                    if(isPercent){\r\n                        var value= parseFloat(money.replaceAll(\",\",\".\"));\r\n                       \r\n                        return value;\r\n                    }\r\n                    else{\r\n                        var value= parseInt(money.replaceAll(\".\",\"\"));\r\n                        return value;\r\n                    }\r\n                   \r\n                }\r\n                else{\r\n                    return \"\";\r\n                }\r\n               \r\n            } catch (error) {\r\n                console.log(error);\r\n            }\r\n        },\r\n        /**\r\n         * Author:PXTRUONG(20/6/2023)\r\n         * Xóa khoảng trắng \r\n         */\r\n        whiteSpace(data){\r\n            if(data){\r\n                data=data.toString();\r\n                var value= data.replace(/\\s/g, \"\");\r\n                return value;\r\n                 \r\n            }\r\n        }\r\n};\r\nexport default format"],"mappings":"AAAA,MAAMA,MAAM,GAAC;EACJ;AACT;AACA;AACA;EACSC,UAAUA,CAACC,KAAK,EAACC,SAAS,EAAC;IACxB,IAAI;MACA,IAAGD,KAAK,EAAC;QACL,IAAGC,SAAS,EAAC;UACV,IAAGD,KAAK,IAAEE,QAAQ,EAAC;YAClB,OAAO,EAAE;UACV,CAAC,MACG;YACHF,KAAK,GAAGG,UAAU,CAACH,KAAK,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC;YAEpCJ,KAAK,GAAGA,KAAK,CAACK,QAAQ,CAAC,CAAC;YAExB,OAAOL,KAAK,CAACM,UAAU,CAAC,GAAG,EAAC,GAAG,CAAC;UACjC;QAEH,CAAC,MACG;UACAN,KAAK,GAAGG,UAAU,CAACH,KAAK,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC;UACpCJ,KAAK,GAAGA,KAAK,CAACK,QAAQ,CAAC,CAAC;UACxB,OAAOL,KAAK,CAACO,OAAO,CAAC,yBAAyB,EAAE,KAAK,CAAC;QAC1D;MAEJ,CAAC,MACG;QACA,OAAO,EAAE;MACb;IAEJ,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZ,OAAOA,KAAK;IAChB;EACJ,CAAC;EACA;AACT;AACA;AACA;EACQC,QAAQA,CAACT,KAAK,EAACC,SAAS,EAAC;IACrB,IAAI;MACA,IAAGD,KAAK,EAAC;QACL,IAAGC,SAAS,EAAC;UACT,IAAIS,KAAK,GAAEP,UAAU,CAACH,KAAK,CAACM,UAAU,CAAC,GAAG,EAAC,GAAG,CAAC,CAAC;UAEhD,OAAOI,KAAK;QAChB,CAAC,MACG;UACA,IAAIA,KAAK,GAAEC,QAAQ,CAACX,KAAK,CAACM,UAAU,CAAC,GAAG,EAAC,EAAE,CAAC,CAAC;UAC7C,OAAOI,KAAK;QAChB;MAEJ,CAAC,MACG;QACA,OAAO,EAAE;MACb;IAEJ,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZI,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;IACtB;EACJ,CAAC;EACD;AACR;AACA;AACA;EACQM,UAAUA,CAACC,IAAI,EAAC;IACZ,IAAGA,IAAI,EAAC;MACJA,IAAI,GAACA,IAAI,CAACV,QAAQ,CAAC,CAAC;MACpB,IAAIK,KAAK,GAAEK,IAAI,CAACR,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;MAClC,OAAOG,KAAK;IAEhB;EACJ;AACR,CAAC;AACD,eAAeZ,MAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}