{"ast":null,"code":"import { ElDropdown } from \"element-plus\";\nimport { ArrowDown } from \"@element-plus/icons-vue\";\nexport default {\n  components: {\n    ElDropdown,\n    ArrowDown\n  },\n  props: {\n    listData: null,\n    labelContent: null,\n    data: null,\n    iconDropdown: null,\n    isRequire: Boolean\n  },\n  created() {\n    console.log(this.listData);\n  },\n  data() {\n    return {\n      isshow: false,\n      nowindex: 0,\n      value: null\n    };\n  },\n  methods: {\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện đóng mở dropdown \r\n     */\n    showClick() {\n      const dropdown1 = this.$refs[\"dropdown1\"];\n      if (this.isshow == false) {\n        dropdown1.handleOpen();\n        this.isshow = true;\n      } else {\n        dropdown1.handleClose();\n        this.isshow = false;\n      }\n    },\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện mở dropdown khi nhấn nút xuống \r\n     */\n    kewdown() {\n      const dropdown1 = this.$refs[\"dropdown1\"];\n      dropdown1.handleOpen();\n      if (this.nowindex < this.listData.length) {\n        this.nowindex++;\n      } else {\n        this.nowindex = 0;\n      }\n    },\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện lấy giá trị khi chọn từ dropdown\r\n     */\n    handleCommand(command) {\n      this.value = command;\n    },\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện đóng trang dropdown\r\n     */\n    clostab() {\n      const dropdown1 = this.$refs[\"dropdown1\"];\n      dropdown1.handleClose();\n    },\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện truyền dữ liệu khi nhấn enter chọn giá trị từ dropdown\r\n     */\n    enter() {\n      const dropdown1 = this.$refs[\"dropdown\"];\n      dropdown1.forEach(element => {\n        if (element.$attrs.class == \"color\") {\n          this.handleCommand(element.command);\n        }\n        ;\n      });\n      this.clostab();\n    }\n  }\n};","map":{"version":3,"names":["ElDropdown","ArrowDown","components","props","listData","labelContent","data","iconDropdown","isRequire","Boolean","created","console","log","isshow","nowindex","value","methods","showClick","dropdown1","$refs","handleOpen","handleClose","kewdown","length","handleCommand","command","clostab","enter","forEach","element","$attrs","class"],"sources":["C:\\Users\\Admin\\Desktop\\Web-04-PXTRUONG\\web-04-vue\\web202304\\pxtruong\\vue\\src\\components\\base\\MDropdown.vue"],"sourcesContent":["<template>\r\n  <div class=\"input__container dropdown_container\">\r\n    <div class=\"icon dropdown__icon--position \"  :class=\"iconDropdown\" v-if=\"iconDropdown\"></div>\r\n    <p class=\"popup__font__label--name\">\r\n    {{ labelContent }}<span class=\"popup__color--red\" >*</span>\r\n    </p>\r\n    <input class=\"input__field dropdown_input--padding input__padding--30px \" placeholder=\" \" @keydown.down=\"kewdown\" v-model=\"this.value\" @keyup.enter=\"enter\" v-if=\"iconDropdown\">\r\n    <input class=\"input__field dropdown_input--padding input__padding--30px \" placeholder=\" \" @keydown.down=\"kewdown\" v-model=\"this.value\" @keyup.enter=\"enter\" v-if=\"!iconDropdown\">\r\n    <div class=\"icon popup__input--icon input__dropdown\" @click=\"showClick\">\r\n\r\n    </div>\r\n    <el-dropdown @command=\"handleCommand\" trigger=\"click\" ref=\"dropdown1\">\r\n      <span class=\"el-dropdown-link-department\">\r\n        <el-icon>\r\n          <arrow-down />\r\n        </el-icon>\r\n      </span>\r\n      <template #dropdown>\r\n        <el-dropdown-menu v-for=\"(item, index) in listData\" :key=\"index\">\r\n          <el-dropdown-item :command=\"item.DepartmentName\" :class=\"{ 'color': index == this.nowindex }\" ref=\"dropdown\" :value=\"index\">\r\n            {{ item.DepartmentName }}\r\n          </el-dropdown-item>\r\n        </el-dropdown-menu>\r\n      </template>\r\n    </el-dropdown>\r\n  </div>\r\n</template>\r\n<script>\r\nimport { ElDropdown } from \"element-plus\";\r\nimport { ArrowDown } from \"@element-plus/icons-vue\";\r\nexport default {\r\n  components: {\r\n    ElDropdown,\r\n    ArrowDown,\r\n  },\r\n  props: {\r\n    listData: null,\r\n    labelContent:null,\r\n    data:null,\r\n    iconDropdown:null,\r\n    isRequire:Boolean\r\n  },\r\n  created() {\r\n    console.log(this.listData);\r\n  },\r\n  data() {\r\n    return {\r\n      isshow: false,\r\n      nowindex: 0,\r\n      value: null\r\n\r\n    }\r\n  },\r\n  methods: {\r\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện đóng mở dropdown \r\n     */\r\n    showClick() {\r\n      const dropdown1 = this.$refs[\"dropdown1\"];\r\n      if (this.isshow == false) {\r\n        dropdown1.handleOpen();\r\n        this.isshow = true;\r\n      }\r\n      else {\r\n        dropdown1.handleClose();\r\n        this.isshow = false;\r\n      }\r\n\r\n\r\n    },\r\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện mở dropdown khi nhấn nút xuống \r\n     */\r\n    kewdown() {\r\n      const dropdown1 = this.$refs[\"dropdown1\"];\r\n\r\n      dropdown1.handleOpen();\r\n\r\n      if (this.nowindex < this.listData.length) {\r\n\r\n        this.nowindex++;\r\n\r\n      }\r\n\r\n      else {\r\n        this.nowindex = 0;\r\n      }\r\n    },\r\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện lấy giá trị khi chọn từ dropdown\r\n     */\r\n    handleCommand(command) {\r\n\r\n      this.value = command\r\n      \r\n\r\n    },\r\n    /**\r\n     * Author:PXTRUONG(1/6/2023)\r\n     * Thực hiện đóng trang dropdown\r\n     */\r\n     clostab() {\r\n            const dropdown1 = this.$refs[\"dropdown1\"];\r\n            dropdown1.handleClose();\r\n\r\n      },\r\n      /**\r\n       * Author:PXTRUONG(1/6/2023)\r\n       * Thực hiện truyền dữ liệu khi nhấn enter chọn giá trị từ dropdown\r\n       */\r\n       enter() {\r\n            const dropdown1 = this.$refs[\"dropdown\"];\r\n            dropdown1.forEach(element => {\r\n                if (element.$attrs.class == \"color\") {\r\n                    this.handleCommand(element.command);\r\n\r\n                }\r\n                ;\r\n            });\r\n            this.clostab();\r\n          \r\n        }\r\n\r\n  },\r\n}\r\n</script>\r\n<style>\r\n@import url('../../style/base/combobox.css');\r\n@import url('../../style/base/icon.css');\r\n@import url('../../style/base/textfield.css');\r\n\r\n\r\n/* .el-icon svg {\r\n  display: none;\r\n} */\r\n\r\n\r\n</style>"],"mappings":"AA4BA,SAASA,UAAS,QAAS,cAAc;AACzC,SAASC,SAAQ,QAAS,yBAAyB;AACnD,eAAe;EACbC,UAAU,EAAE;IACVF,UAAU;IACVC;EACF,CAAC;EACDE,KAAK,EAAE;IACLC,QAAQ,EAAE,IAAI;IACdC,YAAY,EAAC,IAAI;IACjBC,IAAI,EAAC,IAAI;IACTC,YAAY,EAAC,IAAI;IACjBC,SAAS,EAACC;EACZ,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRC,OAAO,CAACC,GAAG,CAAC,IAAI,CAACR,QAAQ,CAAC;EAC5B,CAAC;EACDE,IAAIA,CAAA,EAAG;IACL,OAAO;MACLO,MAAM,EAAE,KAAK;MACbC,QAAQ,EAAE,CAAC;MACXC,KAAK,EAAE;IAET;EACF,CAAC;EACDC,OAAO,EAAE;IACP;;;;IAIAC,SAASA,CAAA,EAAG;MACV,MAAMC,SAAQ,GAAI,IAAI,CAACC,KAAK,CAAC,WAAW,CAAC;MACzC,IAAI,IAAI,CAACN,MAAK,IAAK,KAAK,EAAE;QACxBK,SAAS,CAACE,UAAU,CAAC,CAAC;QACtB,IAAI,CAACP,MAAK,GAAI,IAAI;MACpB,OACK;QACHK,SAAS,CAACG,WAAW,CAAC,CAAC;QACvB,IAAI,CAACR,MAAK,GAAI,KAAK;MACrB;IAGF,CAAC;IACD;;;;IAIAS,OAAOA,CAAA,EAAG;MACR,MAAMJ,SAAQ,GAAI,IAAI,CAACC,KAAK,CAAC,WAAW,CAAC;MAEzCD,SAAS,CAACE,UAAU,CAAC,CAAC;MAEtB,IAAI,IAAI,CAACN,QAAO,GAAI,IAAI,CAACV,QAAQ,CAACmB,MAAM,EAAE;QAExC,IAAI,CAACT,QAAQ,EAAE;MAEjB,OAEK;QACH,IAAI,CAACA,QAAO,GAAI,CAAC;MACnB;IACF,CAAC;IACD;;;;IAIAU,aAAaA,CAACC,OAAO,EAAE;MAErB,IAAI,CAACV,KAAI,GAAIU,OAAM;IAGrB,CAAC;IACD;;;;IAICC,OAAOA,CAAA,EAAG;MACH,MAAMR,SAAQ,GAAI,IAAI,CAACC,KAAK,CAAC,WAAW,CAAC;MACzCD,SAAS,CAACG,WAAW,CAAC,CAAC;IAE7B,CAAC;IACD;;;;IAICM,KAAKA,CAAA,EAAG;MACH,MAAMT,SAAQ,GAAI,IAAI,CAACC,KAAK,CAAC,UAAU,CAAC;MACxCD,SAAS,CAACU,OAAO,CAACC,OAAM,IAAK;QACzB,IAAIA,OAAO,CAACC,MAAM,CAACC,KAAI,IAAK,OAAO,EAAE;UACjC,IAAI,CAACP,aAAa,CAACK,OAAO,CAACJ,OAAO,CAAC;QAEvC;QACA;MACJ,CAAC,CAAC;MACF,IAAI,CAACC,OAAO,CAAC,CAAC;IAElB;EAEN;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}