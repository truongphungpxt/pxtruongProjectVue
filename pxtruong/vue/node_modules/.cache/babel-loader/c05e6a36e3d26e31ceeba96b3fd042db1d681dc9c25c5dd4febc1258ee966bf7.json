{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, createElementVNode as _createElementVNode, vModelText as _vModelText, normalizeClass as _normalizeClass, withDirectives as _withDirectives, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e70e058a\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"input__container\"\n};\nconst _hoisted_2 = {\n  class: \"popup__font__label--name\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"popup__color--red\"\n};\nconst _hoisted_4 = {\n  class: \"popup__error\"\n};\nconst _hoisted_5 = {\n  key: 0,\n  class: \"popup__color--red\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"p\", _hoisted_2, [_createTextVNode(_toDisplayString($props.inputContent) + \" \", 1 /* TEXT */), $props.isNotAllowNull ? (_openBlock(), _createElementBlock(\"span\", _hoisted_3, \"*\")) : _createCommentVNode(\"v-if\", true)]), _createElementVNode(\"div\", null, [$props.isNomalInput == true ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 0,\n    class: _normalizeClass([\"input__field\", {\n      'input__boder--red': $data.isNull\n    }]),\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => this.value = $event),\n    onBlur: _cache[1] || (_cache[1] = $event => $options.validate(this.value)),\n    ref: \"Minput\"\n  }, null, 34 /* CLASS, HYDRATE_EVENTS */)), [[_vModelText, this.value]]) : _createCommentVNode(\"v-if\", true), $props.isDisable == true ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 1,\n    class: _normalizeClass([\"input__field bgr__color--gray\", {\n      'input__boder--red': $data.isNull\n    }]),\n    disabled: \"\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => this.value = $event),\n    onBlur: _cache[3] || (_cache[3] = $event => $options.validate(this.value))\n  }, null, 34 /* CLASS, HYDRATE_EVENTS */)), [[_vModelText, this.value]]) : _createCommentVNode(\"v-if\", true), $props.isDisablePaddingRight == true ? _withDirectives((_openBlock(), _createElementBlock(\"input\", {\n    key: 2,\n    class: _normalizeClass([\"input__field bgr__color--gray set_text--left\", {\n      'input__boder--red': $data.isNull\n    }]),\n    disabled: \"\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => this.value = $event),\n    onBlur: _cache[5] || (_cache[5] = $event => $options.validate(this.value))\n  }, null, 34 /* CLASS, HYDRATE_EVENTS */)), [[_vModelText, this.value]]) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"div\", _hoisted_4, [$data.isNull ? (_openBlock(), _createElementBlock(\"div\", _hoisted_5, _toDisplayString($data.alertMsg), 1 /* TEXT */)) : _createCommentVNode(\"v-if\", true)])])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_hoisted_2","$props","inputContent","isNotAllowNull","_hoisted_3","isNomalInput","_normalizeClass","$data","isNull","value","$event","onBlur","_cache","$options","validate","ref","isDisable","disabled","isDisablePaddingRight","_hoisted_4","_hoisted_5","_toDisplayString","alertMsg"],"sources":["C:\\Users\\Admin\\Desktop\\Web-04-PXTRUONG\\web-04-vue\\web202304\\pxtruong\\vue\\src\\components\\base\\Minput.vue"],"sourcesContent":["<template>\r\n    <div class=\"input__container\">\r\n        <p class=\"popup__font__label--name\">\r\n            {{ inputContent }} <span v-if=\"isNotAllowNull\" class=\"popup__color--red\">*</span>\r\n        </p>\r\n        <div>\r\n            <input v-if=\"isNomalInput == true\" class=\"input__field  \" v-model=\"this.value\" @blur=\"validate(this.value)\"\r\n                :class=\"{ 'input__boder--red': isNull }\" ref=\"Minput\">\r\n\r\n            <input v-if=\"isDisable == true\" class=\"input__field bgr__color--gray \" disabled v-model=\"this.value\"\r\n                @blur=\"validate(this.value)\" :class=\"{ 'input__boder--red': isNull }\">\r\n\r\n                <input v-if=\"isDisablePaddingRight == true\" class=\"input__field bgr__color--gray  set_text--left \" disabled v-model=\"this.value\"\r\n                @blur=\"validate(this.value)\" :class=\"{ 'input__boder--red': isNull }\">\r\n\r\n            <div class=\"popup__error\">\r\n                <div class=\"popup__color--red\" v-if=\"isNull\">\r\n                    {{ alertMsg }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport main from '../../main.js'\r\nexport default {\r\n    props: {\r\n        modelValue: null,\r\n        inputContent: null,\r\n        isNotAllowNull: Boolean,\r\n        isInputNumber: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isDisable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isFocus: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isNomalInput: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isCheckValidate: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        refText: null,\r\n        isDisablePaddingRight:{\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n\r\n        \r\n\r\n    },\r\n    created() {\r\n        this.value = this.modelValue;\r\n        console.log(this.isInputNumber);\r\n    },\r\n    watch: {\r\n        value: function (newValue) {\r\n            if (!this.checkNull(newValue)) {\r\n                this.validate(newValue);\r\n                this.$emit(\"inValue\",this.inputContent,false);\r\n            }\r\n            \r\n         \r\n            this.$emit(\"update:modelValue\", newValue);\r\n        },\r\n        modelValue: function (newValue) {\r\n            this.value = this.modelValue;\r\n        },\r\n        isCheckValidate: function (newValue) {\r\n            if (newValue && this.isNotAllowNull) {\r\n               if(this.validate(this.value)){\r\n                \r\n               } \r\n                \r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        //xét focus vào input mình muốn \r\n        if (this.isFocus) {\r\n            this.$nextTick(function () {\r\n                this.$refs[\"Minput\"].focus();\r\n            })\r\n        }\r\n        \r\n\r\n\r\n    },\r\n\r\n    methods: {\r\n        /**\r\n         * AuthorPXTRUONG(15/6/2023)\r\n         * Check null\r\n         */\r\n        checkNull(data) {\r\n            data= data.replace(/\\s/g, '')\r\n            console.log(data);\r\n            if (data == null || data == undefined || data == \"\") {\r\n                \r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        /**\r\n         * Author:PXTRUONG, Create: 29/5/2023\r\n         * validate dữ liệu \r\n         */\r\n        validate(data) {\r\n            try {\r\n                if (this.isNotAllowNull == true) {\r\n                    const t= this\r\n                    const value= t.modelValue;\r\n                    if ( this.checkNull(value)) {\r\n                        this.isNull = true;\r\n                        this.alertMsg = this.inputContent + \" không được bỏ trống\";\r\n                        // this.$nextTick( ()=> {\r\n                        //     this.$refs.Minput?.focus();\r\n                        // });\r\n                        // console.log( this.$refs.Minput);\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        this.isNull = false;\r\n\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        },\r\n\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            value: null,\r\n            isRequid: Boolean,\r\n            isNull: false,\r\n            alertMsg: null\r\n\r\n        }\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n@import url(../../style/base/textfield.css);\r\n@import url(../../style/base/icon.css);\r\n</style>"],"mappings":";;;EACSA,KAAK,EAAC;AAAkB;;EACtBA,KAAK,EAAC;AAA0B;;;EACgBA,KAAK,EAAC;;;EAYhDA,KAAK,EAAC;AAAc;;;EAChBA,KAAK,EAAC;;;uBAfvBC,mBAAA,CAqBM,OArBNC,UAqBM,GApBFC,mBAAA,CAEI,KAFJC,UAEI,G,kCADGC,MAAA,CAAAC,YAAY,IAAG,GAAC,iBAAYD,MAAA,CAAAE,cAAc,I,cAA1BN,mBAAA,CAA8D,QAA9DO,UAA8D,EAAR,GAAC,K,qCAE9EL,mBAAA,CAeM,cAdWE,MAAA,CAAAI,YAAY,W,+BAAzBR,mBAAA,CAC0D;;IADvBD,KAAK,EAAAU,eAAA,EAAC,cAAgB;MAAA,qBACtBC,KAAA,CAAAC;IAAM;oEAD+BC,KAAK,GAAAC,MAAA;IAAGC,MAAI,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEG,QAAA,CAAAC,QAAQ,MAAML,KAAK;IAC5DM,GAAG,EAAC;iEADuBN,KAAK,E,uCAGhER,MAAA,CAAAe,SAAS,W,+BAAtBnB,mBAAA,CAC0E;;IAD1CD,KAAK,EAAAU,eAAA,EAAC,+BAAgC;MAAA,qBACNC,KAAA,CAAAC;IAAM;IADCS,QAAQ,EAAR,EAAQ;oEAAeR,KAAK,GAAAC,MAAA;IAC9FC,MAAI,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEG,QAAA,CAAAC,QAAQ,MAAML,KAAK;iEADgEA,KAAK,E,uCAGlFR,MAAA,CAAAiB,qBAAqB,W,+BAAlCrB,mBAAA,CACsE;;IAD1BD,KAAK,EAAAU,eAAA,EAAC,8CAAgD;MAAA,qBACtCC,KAAA,CAAAC;IAAM;IADiCS,QAAQ,EAAR,EAAQ;oEAAeR,KAAK,GAAAC,MAAA;IAC9HC,MAAI,EAAAC,MAAA,QAAAA,MAAA,MAAAF,MAAA,IAAEG,QAAA,CAAAC,QAAQ,MAAML,KAAK;iEADgGA,KAAK,E,uCAGnIV,mBAAA,CAIM,OAJNoB,UAIM,GAHmCZ,KAAA,CAAAC,MAAM,I,cAA3CX,mBAAA,CAEM,OAFNuB,UAEM,EAAAC,gBAAA,CADCd,KAAA,CAAAe,QAAQ,oB"},"metadata":{},"sourceType":"module","externalDependencies":[]}