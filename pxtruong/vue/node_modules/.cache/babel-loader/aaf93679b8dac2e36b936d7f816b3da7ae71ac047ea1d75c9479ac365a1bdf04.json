{"ast":null,"code":"import main from '../../main.js';\nexport default {\n  props: {\n    modelValue: null,\n    inputContent: null,\n    isNotAllowNull: Boolean,\n    isInputNumber: {\n      type: Boolean,\n      default: false\n    },\n    isDisable: {\n      type: Boolean,\n      default: false\n    },\n    isFocus: {\n      type: Boolean,\n      default: false\n    },\n    isNomalInput: {\n      type: Boolean,\n      default: false\n    },\n    isCheckValidate: {\n      type: Boolean,\n      default: false\n    },\n    refText: null,\n    isDisablePaddingRight: {\n      type: Boolean,\n      default: false\n    }\n  },\n  created() {\n    this.value = this.modelValue;\n    console.log(this.isInputNumber);\n  },\n  watch: {\n    value: function (newValue) {\n      if (!this.checkNull(newValue)) {\n        this.validate(newValue);\n        this.$emit(\"inValue\", this.inputContent, false);\n      }\n      this.$emit(\"update:modelValue\", newValue);\n    },\n    modelValue: function (newValue) {\n      this.value = this.modelValue;\n    },\n    isCheckValidate: function (newValue) {\n      if (newValue && this.isNotAllowNull) {\n        if (this.validate(this.value)) {}\n      }\n    }\n  },\n  mounted() {\n    //xét focus vào input mình muốn \n    if (this.isFocus) {\n      this.$nextTick(function () {\n        this.$refs[\"Minput\"].focus();\n      });\n    }\n  },\n  methods: {\n    /**\r\n     * AuthorPXTRUONG(15/6/2023)\r\n     * Check null\r\n     */\n    checkNull(data) {\n      if (data == null || data == undefined || data.replace(/\\s/g, \" \") == \"\") {\n        console.log(data);\n        return true;\n      } else {\n        return false;\n      }\n    },\n    /**\r\n     * Author:PXTRUONG, Create: 29/5/2023\r\n     * validate dữ liệu \r\n     */\n    validate(data) {\n      try {\n        if (this.isNotAllowNull == true) {\n          const t = this;\n          const value = t.modelValue;\n          if (this.checkNull(value)) {\n            this.isNull = true;\n            this.alertMsg = this.inputContent + \" không được bỏ trống\";\n            // this.$nextTick( ()=> {\n            //     this.$refs.Minput?.focus();\n            // });\n            // console.log( this.$refs.Minput);\n            return true;\n          } else {\n            this.isNull = false;\n            return false;\n          }\n        }\n      } catch (error) {}\n    }\n  },\n  data() {\n    return {\n      value: null,\n      isRequid: Boolean,\n      isNull: false,\n      alertMsg: null\n    };\n  }\n};","map":{"version":3,"names":["main","props","modelValue","inputContent","isNotAllowNull","Boolean","isInputNumber","type","default","isDisable","isFocus","isNomalInput","isCheckValidate","refText","isDisablePaddingRight","created","value","console","log","watch","newValue","checkNull","validate","$emit","mounted","$nextTick","$refs","focus","methods","data","undefined","replace","t","isNull","alertMsg","error","isRequid"],"sources":["C:\\Users\\Admin\\Desktop\\Web-04-PXTRUONG\\web-04-vue\\web202304\\pxtruong\\vue\\src\\components\\base\\Minput.vue"],"sourcesContent":["<template>\r\n    <div class=\"input__container\">\r\n        <p class=\"popup__font__label--name\">\r\n            {{ inputContent }} <span v-if=\"isNotAllowNull\" class=\"popup__color--red\">*</span>\r\n        </p>\r\n        <div>\r\n            <input v-if=\"isNomalInput == true\" class=\"input__field  \" v-model=\"this.value\" @blur=\"validate(this.value)\"\r\n                :class=\"{ 'input__boder--red': isNull }\" ref=\"Minput\">\r\n\r\n            <input v-if=\"isDisable == true\" class=\"input__field bgr__color--gray \" disabled v-model=\"this.value\"\r\n                @blur=\"validate(this.value)\" :class=\"{ 'input__boder--red': isNull }\">\r\n\r\n                <input v-if=\"isDisablePaddingRight == true\" class=\"input__field bgr__color--gray  set_text--left \" disabled v-model=\"this.value\"\r\n                @blur=\"validate(this.value)\" :class=\"{ 'input__boder--red': isNull }\">\r\n\r\n            <div class=\"popup__error\">\r\n                <div class=\"popup__color--red\" v-if=\"isNull\">\r\n                    {{ alertMsg }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport main from '../../main.js'\r\nexport default {\r\n    props: {\r\n        modelValue: null,\r\n        inputContent: null,\r\n        isNotAllowNull: Boolean,\r\n        isInputNumber: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isDisable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isFocus: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isNomalInput: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isCheckValidate: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        refText: null,\r\n        isDisablePaddingRight:{\r\n            type: Boolean,\r\n            default: false\r\n        }\r\n\r\n        \r\n\r\n    },\r\n    created() {\r\n        this.value = this.modelValue;\r\n        console.log(this.isInputNumber);\r\n    },\r\n    watch: {\r\n        value: function (newValue) {\r\n            if (!this.checkNull(newValue)) {\r\n                this.validate(newValue);\r\n                this.$emit(\"inValue\",this.inputContent,false);\r\n            }\r\n            \r\n         \r\n            this.$emit(\"update:modelValue\", newValue);\r\n        },\r\n        modelValue: function (newValue) {\r\n            this.value = this.modelValue;\r\n        },\r\n        isCheckValidate: function (newValue) {\r\n            if (newValue && this.isNotAllowNull) {\r\n               if(this.validate(this.value)){\r\n                \r\n               } \r\n                \r\n            }\r\n        }\r\n    },\r\n    mounted() {\r\n        //xét focus vào input mình muốn \r\n        if (this.isFocus) {\r\n            this.$nextTick(function () {\r\n                this.$refs[\"Minput\"].focus();\r\n            })\r\n        }\r\n        \r\n\r\n\r\n    },\r\n\r\n    methods: {\r\n        /**\r\n         * AuthorPXTRUONG(15/6/2023)\r\n         * Check null\r\n         */\r\n        checkNull(data) {\r\n            if (data == null || data == undefined || data.replace(/\\s/g,\" \") == \"\") {\r\n                console.log(data);\r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        /**\r\n         * Author:PXTRUONG, Create: 29/5/2023\r\n         * validate dữ liệu \r\n         */\r\n        validate(data) {\r\n            try {\r\n                if (this.isNotAllowNull == true) {\r\n                    const t= this\r\n                    const value= t.modelValue;\r\n                    if ( this.checkNull(value)) {\r\n                        this.isNull = true;\r\n                        this.alertMsg = this.inputContent + \" không được bỏ trống\";\r\n                        // this.$nextTick( ()=> {\r\n                        //     this.$refs.Minput?.focus();\r\n                        // });\r\n                        // console.log( this.$refs.Minput);\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        this.isNull = false;\r\n\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        },\r\n\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            value: null,\r\n            isRequid: Boolean,\r\n            isNull: false,\r\n            alertMsg: null\r\n\r\n        }\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n@import url(../../style/base/textfield.css);\r\n@import url(../../style/base/icon.css);\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}