{"ast":null,"code":"import format from '@/js/format/format';\nexport default {\n  props: {\n    modelValue: null,\n    inputContent: null,\n    isNotAllowNull: Boolean,\n    isInputNumber: {\n      type: Boolean,\n      default: false\n    },\n    isDisable: {\n      type: Boolean,\n      default: false\n    },\n    isFocus: {\n      type: Boolean,\n      default: false\n    },\n    isNomalInput: {\n      type: Boolean,\n      default: false\n    },\n    isCheckValidate: {\n      type: Boolean,\n      default: false\n    },\n    refText: null,\n    isDisablePaddingRight: {\n      type: Boolean,\n      default: false\n    },\n    setMaxLength: null\n  },\n  created() {\n    this.value = this.modelValue;\n    console.log(this.isInputNumber);\n  },\n  watch: {\n    isFocus: function (newValue) {\n      console.log(\"nhẩy vào: \", newValue);\n      if (newValue) {\n        this.$nextTick(function () {\n          this.$refs[\"Minput\"].focus();\n        });\n      }\n    },\n    value: function (newValue) {\n      if (!this.checkNull(newValue)) {\n        this.validate(newValue);\n        this.$emit(\"inValue\", this.inputContent, false);\n      }\n      this.$emit(\"update:modelValue\", newValue);\n    },\n    modelValue: function (newValue) {\n      this.value = this.modelValue;\n    },\n    isCheckValidate: function (newValue) {\n      if (newValue && this.isNotAllowNull) {\n        if (this.validate(this.value)) {}\n      }\n    }\n  },\n  // mounted() {\n  //     //xét focus vào input mình muốn \n  //     if (this.isFocus) {\n  //         this.$nextTick(function () {\n  //             this.$refs[\"Minput\"].focus();\n  //         })\n  //     }\n\n  // },\n\n  methods: {\n    /**\r\n     * AuthorPXTRUONG(15/6/2023)\r\n     * Check null\r\n     */\n    checkNull(data) {\n      data = format.whiteSpace(data);\n      if (!data) {\n        return true;\n      } else {\n        return false;\n      }\n    },\n    /**\r\n     * Author:PXTRUONG, Create: 29/5/2023\r\n     * validate dữ liệu \r\n     */\n    validate(data) {\n      try {\n        if (this.isNotAllowNull == true) {\n          const t = this;\n          const value = t.modelValue;\n          if (this.checkNull(value)) {\n            this.isNull = true;\n            this.alertMsg = this.inputContent + \" không được bỏ trống\";\n            // this.$nextTick( ()=> {\n            //     this.$refs.Minput?.focus();\n            // });\n            // console.log( this.$refs.Minput);\n            return true;\n          } else {\n            this.isNull = false;\n            return false;\n          }\n        }\n      } catch (error) {}\n    }\n  },\n  data() {\n    return {\n      value: null,\n      isRequid: Boolean,\n      isNull: false,\n      alertMsg: null\n    };\n  }\n};","map":{"version":3,"names":["format","props","modelValue","inputContent","isNotAllowNull","Boolean","isInputNumber","type","default","isDisable","isFocus","isNomalInput","isCheckValidate","refText","isDisablePaddingRight","setMaxLength","created","value","console","log","watch","newValue","$nextTick","$refs","focus","checkNull","validate","$emit","methods","data","whiteSpace","t","isNull","alertMsg","error","isRequid"],"sources":["C:\\Users\\Admin\\Desktop\\Web-04-PXTRUONG\\web-04-vue\\web202304\\pxtruong\\vue\\src\\components\\base\\Minput.vue"],"sourcesContent":["<template>\r\n    <div class=\"input__container\">\r\n        <p class=\"popup__font__label--name\">\r\n            {{ inputContent }} <span v-if=\"isNotAllowNull\" class=\"popup__color--red\">*</span>\r\n        </p>\r\n        <div>\r\n            <input v-if=\"isNomalInput == true\" class=\"input__field  \" v-model=\"this.value\" @blur=\"validate(this.value)\"\r\n                :class=\"{ 'input__boder--red': isNull }\" ref=\"Minput\" :maxlength=\"setMaxLength\" tabindex=\"0\">\r\n\r\n            <input v-if=\"isDisable == true\" class=\"input__field bgr__color--gray \" disabled v-model=\"this.value\"\r\n                @blur=\"validate(this.value)\" :class=\"{ 'input__boder--red': isNull }\">\r\n\r\n                <input v-if=\"isDisablePaddingRight == true\" class=\"input__field bgr__color--gray  set_text--left \" disabled v-model=\"this.value\"\r\n                @blur=\"validate(this.value)\" :class=\"{ 'input__boder--red': isNull }\">\r\n\r\n            <div class=\"popup__error\">\r\n                <div class=\"popup__color--red\" v-if=\"isNull\">\r\n                    {{ alertMsg }}\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n</template>\r\n<script>\r\nimport format from '@/js/format/format';\r\nexport default {\r\n    props: {\r\n        modelValue: null,\r\n        inputContent: null,\r\n        isNotAllowNull: Boolean,\r\n        isInputNumber: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isDisable: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isFocus: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isNomalInput: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        isCheckValidate: {\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        refText: null,\r\n        isDisablePaddingRight:{\r\n            type: Boolean,\r\n            default: false\r\n        },\r\n        setMaxLength:null\r\n\r\n        \r\n\r\n    },\r\n    created() {\r\n        this.value = this.modelValue;\r\n        console.log(this.isInputNumber);\r\n    },\r\n    watch: {\r\n        isFocus:function(newValue){\r\n            console.log(\"nhẩy vào: \",newValue);\r\n            if(newValue){\r\n                this.$nextTick(function () {\r\n                this.$refs[\"Minput\"].focus();\r\n            })\r\n            }\r\n           \r\n        },\r\n        value: function (newValue) {\r\n            if (!this.checkNull(newValue)) {\r\n                this.validate(newValue);\r\n                this.$emit(\"inValue\",this.inputContent,false);\r\n            }\r\n            \r\n         \r\n            this.$emit(\"update:modelValue\", newValue);\r\n        },\r\n        modelValue: function (newValue) {\r\n            this.value = this.modelValue;\r\n        },\r\n        isCheckValidate: function (newValue) {\r\n            if (newValue && this.isNotAllowNull) {\r\n               if(this.validate(this.value)){\r\n                \r\n               } \r\n                \r\n            }\r\n        }\r\n    },\r\n    // mounted() {\r\n    //     //xét focus vào input mình muốn \r\n    //     if (this.isFocus) {\r\n    //         this.$nextTick(function () {\r\n    //             this.$refs[\"Minput\"].focus();\r\n    //         })\r\n    //     }\r\n        \r\n\r\n\r\n    // },\r\n\r\n    methods: {\r\n        /**\r\n         * AuthorPXTRUONG(15/6/2023)\r\n         * Check null\r\n         */\r\n        checkNull( data) {\r\n            data=format.whiteSpace(data)\r\n        \r\n            if (!data) {\r\n                \r\n                return true;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        },\r\n        /**\r\n         * Author:PXTRUONG, Create: 29/5/2023\r\n         * validate dữ liệu \r\n         */\r\n        validate(data) {\r\n            try {\r\n                if (this.isNotAllowNull == true) {\r\n                    const t= this\r\n                    const value= t.modelValue;\r\n                    if ( this.checkNull(value)) {\r\n                        this.isNull = true;\r\n                        this.alertMsg = this.inputContent + \" không được bỏ trống\";\r\n                        // this.$nextTick( ()=> {\r\n                        //     this.$refs.Minput?.focus();\r\n                        // });\r\n                        // console.log( this.$refs.Minput);\r\n                        return true;\r\n                    }\r\n                    else {\r\n                        this.isNull = false;\r\n\r\n                        return false;\r\n                    }\r\n\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n            }\r\n\r\n\r\n        },\r\n\r\n\r\n    },\r\n    data() {\r\n        return {\r\n            value: null,\r\n            isRequid: Boolean,\r\n            isNull: false,\r\n            alertMsg: null\r\n\r\n        }\r\n    },\r\n}\r\n</script>\r\n<style scoped>\r\n@import url(../../style/base/textfield.css);\r\n@import url(../../style/base/icon.css);\r\n</style>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}